int x, y, xGround, yGround, boxSize, xHP, yHP, sec;
float jumpSpeed, gravity, xSun, ySun, sunSize, ySunSpeed, ySunDeccel, xButt, 
      yStartButt, buttLength, buttHeight, xCtrlsButt, yCtrlsButt, xStoryButt, 
      yStoryButt, xSunSpeed, xSunDeccel, r, g, b, xTrunk, yTrunk, widthTrunk, 
      heightTrunk, xTree, yTree, treeDiameter, xShadow1, yShadow1, xShadow2,
      yShadow2, xShadow3, yShadow3, q, w, e;
String screen;
float xHead, yHead, headWidth, headHeight,
      xBott, yBott, bottWidth, bottHeight;

void setup() {
  size(850, 650);
  
  xGround = 0;
  yGround = 470;
  
  // Player
  bottWidth = 75;
  bottHeight = 75;
 
  xBott = 200;
  yBott = yGround - bottHeight/2;


  // Tree
  widthTrunk = 50;
  heightTrunk = 160;
  xTrunk = width * 0.6;
  yTrunk = yGround - heightTrunk;
  treeDiameter = 155;
  xTree = xTrunk + widthTrunk/2;
  yTree = yTrunk - treeDiameter/4;
  
  //Shadow
  xShadow1 = xTree;
  yShadow1 = yTree; 
  //xShadow2 = x;
  yShadow2 = yGround; 
  xShadow3 = xTree; 
  yShadow3 = yTrunk + heightTrunk;
  
  xHP = 50;
  yHP = 10;

  //jumpSpeed = 0;
  gravity = 0.5;
  sec = second();
  screen = "menu";
}

void draw() {
  headWidth = bottHeight * 2/3;
  headHeight = bottHeight * 2/3;
  xHead = xBott;
  yHead = yBott - bottHeight/3 - headHeight/2;
  
  yBott -= jumpSpeed;
  jumpSpeed -= gravity;
  
  if (yBott > yGround - bottHeight/2) {
    yBott = yGround - bottHeight/2;
  }
  
  background(240, 230, 230);
  noStroke();
  
  // ground
  fill(30, 30, 90);
  rect(xGround, yGround, width, height/2);
  
  // player/snowman
  fill(253, 253, 253);
  ellipse(xBott, yBott, bottWidth, bottHeight);
  fill(254, 254, 254);
  ellipse(xHead, yHead, headWidth, headHeight);
  
  if (keyCode == 39) {                      // facing right
    // its right eye
    fill(0);
    ellipse(xHead, yHead - headHeight/10, 
            headWidth/10, headHeight/10);
    // its left eye
    ellipse(xHead + headWidth/3, yHead - headHeight/10, 
            headWidth/10, headHeight/10);      
    // smile
    ellipse(xHead, yHead + headHeight/4,
            headWidth/20, headHeight/20);
    ellipse(xHead + headWidth/10, yHead + headHeight/3.5,
            headWidth/20, headHeight/20);
    ellipse(xHead + headWidth/5, yHead + headHeight/3.5,
            headWidth/20, headHeight/20);
    ellipse(xHead + headWidth/10 * 3, yHead + headHeight/4,
            headWidth/20, headHeight/20);
    // carrot nose
    fill(252, 212, 11);
    triangle(xHead + headWidth/6, yHead + headHeight/25,
             xHead + headWidth/2.2, yHead + headHeight/16,
             xHead + headWidth/6, yHead + headHeight/6);
  } else if (keyCode == 37) {                // facing left
    // its left eye
    fill(0);
    ellipse(xHead, yHead - headHeight/10, 
            headWidth/10, headHeight/10);
    // its left eye
    ellipse(xHead - headWidth/3, yHead - headHeight/10, 
            headWidth/10, headHeight/10);
    // carrot nose
    fill(252, 212, 11);
    triangle(xHead - headWidth/6, yHead + headHeight/25,
             xHead - headWidth/2.2, yHead + headHeight/16,
             xHead - headWidth/6, yHead + headHeight/6);
  } else {                                  // facing front
    // its right eye
    fill(0);
    ellipse(xHead - headWidth/5, yHead - headHeight/10, 
            headWidth/10, headHeight/10);
    // its left eye
    ellipse(xHead + headWidth/5, yHead - headHeight/10, 
            headWidth/10, headHeight/10);
   // carrot nose
    fill(252, 212, 11);
    triangle(xHead - headWidth/10, yHead + headHeight/25,
             xHead + headWidth/10, yHead + headHeight/25,
             xHead, yHead + headHeight/5);
  }
}

void keyPressed() {
   
  if (keyCode == 39) {
    if (xBott + bottWidth/2 < width) {
      xBott += 5;
    }
  } else if (keyCode == 37) {
    if (xBott - bottWidth/2 > 0) {
      xBott -= 5;
    }
  }
  
  if (keyCode == 32 || keyCode == 38) {
    if (yBott == yGround - bottHeight/2) {
      jumpSpeed = 9.5;
    }
  }

}
